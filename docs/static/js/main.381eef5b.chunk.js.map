{"version":3,"sources":["App.module.css","components/TopNav/TopNav.module.css","components/QRPanel/QRPanel.module.css","components/QRImagePanel/QRImagePanel.module.css","components/TopNav/TopNav.tsx","components/QRPanel/QRPanel.tsx","components/QRImagePanel/QRImagePanel.tsx","App.tsx","serviceWorker.ts","model/Model.ts","model/AppVersion.ts","index.tsx"],"names":["module","exports","App","AppHeader","AppLink","PanelContainer","TopNav","TopTitle","QRPanel","QRPanelNotes","QRImagePanel","QRImage","this","setState","event","props","clickHandler","react","className","classes","onClick","onButtonClicked","bind","href","style","color","paddingRight","React","qrText","nativeEvent","key","state","selectedOption","console","log","concat","value","dropdownHandler","target","name","inputType","qrPanelClasses","width","react_select_esm","label","options","esmlExamples","onChange","handleDropdownChange","id","rows","onQRTextChange","onKeyPress","qrImagePanelClasses","src","QRCode","require","data","_this","toDataURL","errorCorrectionLevel","type","scale","dark","light","err","url","react_default","a","createElement","TopNav_TopNav","onTopNavClick","QRPanel_QRPanel","onPanelClick","onDropdownChange","model","QRImagePanel_QRImagePanel","Component","Boolean","window","location","hostname","match","Model","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","statusMessages","panelZIndexMap","Map","emit","assertThisInitialized","message","subsystem","arguments","length","undefined","onUpdate","EventEmitter","process","REACT_APP_MODE","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.381eef5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1asSU\",\"AppHeader\":\"App_AppHeader__oc0Tc\",\"AppLink\":\"App_AppLink__1g2xY\",\"PanelContainer\":\"App_PanelContainer__1YArO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopNav\":\"TopNav_TopNav__2cGKg\",\"TopTitle\":\"TopNav_TopTitle__3nm5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QRPanel\":\"QRPanel_QRPanel__3MBl2\",\"QRPanelNotes\":\"QRPanel_QRPanelNotes__1De8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QRImagePanel\":\"QRImagePanel_QRImagePanel__3Qzyk\",\"QRImage\":\"QRImagePanel_QRImage__162mz\"};","import * as React from \"react\";\nimport classes from './TopNav.module.css';\n\nexport interface TopNavProps { clickHandler: any }\nexport interface TopNavState { }\n\nexport default class TopNav extends React.Component<TopNavProps, TopNavState> {\n\n    componentWillMount() {\n        this.setState({});\n    }\n\n    componentDidMount() {\n    }\n\n    onButtonClicked(event: any) {\n        this.props.clickHandler(event);\n    }\n\n    render() {\n        return (\n            <div className={classes.TopNav} onClick={this.onButtonClicked.bind(this)} >\n                <div className={classes.TopTitle}>\n                    <h4>QR Commander</h4>\n                    <h4>\n                        <a href=\"https://github.com/wwlib/qr-commander\" style={{color: 'white', paddingRight: '6px'}}>\n                            github: qr-commander\n                        </a>\n                    </h4>\n                </div>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Select from 'react-select';\nimport classes from './QRPanel.module.css';\n\nexport interface QRPanelProps { clickHandler: any, dropdownHandler: any, esmlExamples: any[] }\nexport interface QRPanelState { qrText: string }\n\nexport default class QRPanel extends React.Component<QRPanelProps, QRPanelState> {\n\n    componentWillMount() {\n        this.setState({ qrText: '' });\n    }\n\n    componentDidMount() {\n    }\n\n    onKeyPress(event: any) {\n        let nativeEvent: any = event.nativeEvent;\n        if (nativeEvent.key == 'Enter') {\n            // submit text\n            this.props.clickHandler(event, { qrText: this.state.qrText });\n        }\n    }\n\n    onButtonClicked(event: any) {\n        this.props.clickHandler(event, { qrText: this.state.qrText });\n    }\n\n    handleDropdownChange(selectedOption: any) {\n        console.log(selectedOption);\n        this.setState({ qrText: `ESML[#]${selectedOption.value}` });\n        this.props.dropdownHandler(selectedOption);\n    }\n\n    onQRTextChange(event: any): void {\n        let nativeEvent: any = event.nativeEvent;\n        switch (nativeEvent.target.name) {\n            case 'qrText':\n                if (nativeEvent.inputType != 'insertLineBreak') {\n                    this.setState({ qrText: nativeEvent.target.value })\n                }\n                break;\n        }\n    }\n\n    render() {\n        const qrPanelClasses: string = `${classes.QRPanel} well`;\n        return (\n            <div className={qrPanelClasses}>\n                <table style={{ width: '100%' }}>\n                    <tbody>\n                        <tr><td><h4>QR Text:</h4></td></tr>\n                        <tr><td>\n                            <Select name=\"Dropdown\" value={{ label: \"Examples\", value: \"Examples\" }} options={this.props.esmlExamples} onChange={this.handleDropdownChange.bind(this)} />\n                        </td></tr>\n                        <tr><td>\n                            <textarea name=\"qrText\" id=\"qrText\" value={this.state.qrText} rows={5} style={{}} onChange={this.onQRTextChange.bind(this)} onKeyPress={this.onKeyPress.bind(this)} />\n                        </td></tr>\n                        <tr><td>\n                            <button className=\"btn btn-success\" id={\"qrText\"} style={{ width: 120 }}\n                                onClick={this.onButtonClicked.bind(this)}>Generate Code</button>\n                        </td></tr>\n                        <tr><td>\n                            <div className={classes.QRPanelNotes}>\n                                <h4>Notes:</h4>\n                                <ul>\n                                    <li>Jibo software version >= 2.0.0 is required</li>\n                                    <li>use Jibo's menu to enable qr-commander</li>\n                                    <li>show qr-commander-generated codes to Jibo to give him things to say</li>\n                                    <li>codes must start with `ESML[#]` followed by text or ESML (Embodied Speech Markup Language)</li>\n                                    <li>see the Examples pulldown for ESML examples</li>\n                                    <li>github repo: <a href=\"https://github.com/wwlib/qr-commander\">https://github.com/wwlib/qr-commander</a></li>\n                                </ul>\n                            </div>\n                        </td></tr>\n\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport classes from './QRImagePanel.module.css';\n\nexport interface QRImagePanelProps { clickHandler: any, QRImage: string  }\nexport interface QRImagePanelState { }\n\nexport default class QRImagePanel extends React.Component<QRImagePanelProps, QRImagePanelState> {\n\n    componentWillMount() {\n        this.setState({});\n    }\n\n    componentDidMount() {\n    }\n\n    onButtonClicked(event: any) {\n        this.props.clickHandler(event);\n    }\n\n    render() {\n        const qrImagePanelClasses: string = `${classes.QRImagePanel} well`;\n        return (\n            <div className={qrImagePanelClasses} onClick={this.onButtonClicked.bind(this)} >\n                <div>\n                    <h4>QR Image</h4>\n                </div>\n                <img className={classes.QRImage} src={this.props.QRImage} />\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport classes from './App.module.css';\n\nimport Model from './model/Model';\nimport TopNav from './components/TopNav/TopNav';\nimport QRPanel from './components/QRPanel/QRPanel';\nimport QRImagePanel from './components/QRImagePanel/QRImagePanel';\n\nconst QRCode = require('qrcode');\n\nexport interface AppProps { model: Model }\nexport interface AppState {\n  QRImage: string,\n}\n\nclass App extends Component<AppProps, AppState> {\n\n  componentWillMount() {\n    this.setState({\n      QRImage: '',\n    });\n  }\n\n  onTopNavClick(event: any): void {\n    let nativeEvent: any = event.nativeEvent;\n    switch (nativeEvent.target.id) {\n      case 'tbd':\n        break;\n    }\n  }\n\n  onDropdownChange(selectedOption: any): void {\n  }\n\n  onPanelClick(event: any, data: any): void {\n    let nativeEvent: any = event.nativeEvent;\n    console.log(`onPanelClick: `, nativeEvent.target.id);\n    switch (nativeEvent.target.id) {\n      case 'qrText':\n        let opts = {\n          errorCorrectionLevel: 'M',\n          type: 'image/png',\n          scale: 8,\n          color: {\n            dark: '#000',  // Blue dots\n            light: '#FFF' // Transparent background\n          }\n        }\n\n        // QRCode.toFile('generated/new-code.png', data.qrText, opts,  (err: string) => {\n        //   if (err) throw err\n        //   console.log('done')\n        // });\n        QRCode.toDataURL(data.qrText, opts, (err: string, url: string) => {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log(url);\n            this.setState({ QRImage: url });\n          }\n\n        });\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <TopNav clickHandler={this.onTopNavClick.bind(this)} />\n        <div className={classes.PanelContainer}>\n          <QRPanel clickHandler={this.onPanelClick.bind(this)} dropdownHandler={this.onDropdownChange.bind(this)} esmlExamples={this.props.model.esmlExamples} />\n          <QRImagePanel clickHandler={this.onPanelClick.bind(this)} QRImage={this.state.QRImage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EventEmitter } from \"events\";\nimport { appVersion } from './AppVersion';\n\nconst uuidv4 = require('uuid/v4');\nconst now = require(\"performance-now\");\n\nexport default class Model extends EventEmitter {\n\n    public statusMessages: string;\n    public panelZIndexMap: Map<string, number>;\n    public esmlExamples: any[];\n\n    constructor() {\n        super();\n        this.panelZIndexMap = new Map<string, number>();\n        this.statusMessages = '';\n\n        this.esmlExamples = [\n                { label: \"hello world\", value: \"hello world!\" },\n                { label: \"happy\", value: \"This is a happy sound <ssa cat='happy'/>\" },\n                { label: \"three-happy\", value: \"Here are three happy sounds <ssa cat='happy' loop='3'/>\" },\n                { label: \"worried\", value: \"<ssa cat='worried'/> That was my worried noise\" },\n                { label: \"penguins\", value: \"<ssa cat='affection' nonBlocking='true'/> I love penguins\" },\n                { label: \"trust-moose\", value: \"Not sure <break size='0.5'/> if trust moose\" },\n                { label: \"break\", value: \"I won’t talk for 2 seconds. <break size='2'/> See?\" },\n                { label: \"bono-moose1\", value: \"Does <phoneme ph='b aa n ou'> Bono </phoneme> love moose, too?\" },\n                { label: \"bono-moose2\", value: \"Does <phoneme ph='b aa1 n ou0'> Bono </phoneme> love moose, too?\" },\n                { label: \"hi-pitched\", value: \"<pitch add='200'> Hi </pitch> <pitch mult='1.2'> there </pitch> <break size='1'/> I'm Jibo\" },\n                { label: \"pitch\", value: \"This is a <pitch mult='2.2'> pitch </pitch> test\" },\n                { label: \"duration\", value: \"This is a <duration stretch='3'> duration </duration> test\" },\n                { label: \"duration-pitch\", value: \"<duration stretch='3.0'> <pitch halftone='-5'> This is a duration and pitch test </pitch></duration>\" },\n                { label: \"hi\", value: \"<pitch band='1.2'> Hi there, I'm Jibo </pitch>\" },\n                { label: \"spell-jibo\", value: \"*Jibo is spelled <say-as spell='jibo'/>\" },\n                { label: \"flower\", value: \"<anim cat='emoji' filter='flower'> This is a flower </anim>\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-upbeat'/>.\" },\n                { label: \"ssa\", value: \"This is a happy sound <ssa cat='happy'/>\" },\n                { label: \"flower\", value: \"<anim cat='emoji' filter='flower'> This is a flower </anim>\" },\n                { label: \"turtle\", value: \"<anim cat='emoji' filter='?flower, ?turtle'> This is either a flower or a turtle </anim>\" },\n                { label: \"not flower\", value: \"<anim cat='emoji' filter='!flower'/> This is not a flower\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='flower, !blue, !white'/> This is flower that isn't blue or white\" },\n                { label: \"twerk\", value: \"<anim cat='dance' filter='rom-twerk'/> I'm a twerking robot\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='?(flower, turtle)'> This is either a flower or a turtle </anim>\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='&(flower), !(blue, white)'/> This is flower that isn't blue\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='&(hf, flower)'/> This is a flower hotframe\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(flower)'/> This is my full flower emoji\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='&(music)'/> I'm dancing to music\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music)'/> I'm dancing without music\" },\n                { label: \"dance\", value: \"I can dance <anim cat=‘dance’ filter=‘music’/> There it was\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’> I’m dancing right now </anim>\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ nonBlocking='true'/> I’m dancing right now\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ loop='0'> Look at me, I’m dancing right now, for an extended period of time </anim>\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ loop='3'/> I just danced 3 times\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ loop='3' nonBlocking='true'/> I’m dancing right now, 3 times\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ endNeutral='true'/> I’m dancing right now\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ endNeutral='true' nonBlocking='true'/> I’m dancing right now\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ layers='!screen'/> I'm dancing with no screen animations\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ layers='screen’/> I'm dancing with only screen animations\" },\n                { label: \"dance\", value: \"<anim cat=‘dance’ filter=‘music’ layers='screen, body'/> I'm dancing with screen and body animations\" },\n                { label: \"ssa\", value: \"This is a happy sound <ssa cat='happy'/>\" },\n                { label: \"ssa\", value: \"Here are three happy sounds <ssa cat='happy' loop='3'/>\" },\n                { label: \"ssa\", value: \"<ssa cat='worried'/> That was my worried noise.\" },\n                { label: \"ssa\", value: \"<ssa cat='affection' nonBlocking='true'/> I love penguins.\" },\n                { label: \"pitch\", value: \"<pitch add='200'> Hi </pitch><pitch mult='1.2'> there </pitch><break size='1'/> I'm Jibo\" },\n                { label: \"pitch\", value: \"This is a <pitch mult='2.2'> pitch </pitch> test\" },\n                { label: \"pitch\", value: \"<pitch band='1.2'> Hi there, I'm Jibo </pitch>\" },\n                { label: \"pitch\", value: \"<pitch halftone='-5'> This is a pitch test </pitch>\" },\n                { label: \"duration\", value: \"This is a <duration stretch='3'> duration </duration> test\" },\n                { label: \"duration\", value: \"<duration stretch='3.0'> This is a duration test </duration>\" },\n                { label: \"spell\", value: \"Jibo is spelled <say-as spell='jibo'/>\" },\n                { label: \"phoneme\", value: \"Does <phoneme ph='b aa n ou'> Bono </phoneme> love moose, too?\" },\n                { label: \"phoneme\", value: \"Does <phoneme ph='b aa1 n ou0'> Bono </phoneme> love moose, too?\" },\n                { label: \"style\", value: \"<style set='enthusiastic'> This is great </style> But, <style set='confused'> how did they do that? </style>\" },\n                { label: \"category\", value: \"<anim cat='affection' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='confused' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='dance' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='embarrassed' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='excited' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='frustrated' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='happy' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='laughing' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='no' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='proud' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='relieved ' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='sad' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='scared' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='surprised' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='worried' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"category\", value: \"<anim cat='yes' nonBlocking='true' endNeutral='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(airplane)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(basketball)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(beach)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(car)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(disco-spin)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(football)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(soccer)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(trophy)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(music)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(question-mark)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(star)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(beer)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(cake)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(cheese)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(drumstick)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(coffee)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(fork)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(fish)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(groceries)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(burger)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(hotdog)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(icecream)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(pizza)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(wine)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(christmas-tree)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(fireworks)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(halloween)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(hanukkah)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(thanksgiving)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(clover)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(valentines)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(chocolate)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(bicycle)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(cat)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(laptop)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(dog)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(gift)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(house)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(laundry)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(lightbulb)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(money)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(popcorn)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(party)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(phone)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(robot)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(sunglasses)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(toilet-paper)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(trash)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(umbrella)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(video-game)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(bird)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(cow)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(earth)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(flower)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(lightning-bolt)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(moon)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(mountain)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(mouse)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(penguin)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(pig)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(bunny)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(rainbow)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(baby)' nonBlocking='true' />.\" },\n                { label: \"emoji\", value: \"<anim cat='emoji' filter='!(hf), &(heart)' nonBlocking='true' />.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-upbeat'/>.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-ballroom'/>.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-silly'/>.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-slowdance'/>.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-eletronic'/>.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='music, rom-twerk'/>.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music), &(rom-upbeat)' />.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music), &(rom-ballroom)' />.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music), &(rom-silly)' />.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music), &(rom-slowdance)' />.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music), &(rom-eletronic)' />.\" },\n                { label: \"dance\", value: \"<anim cat='dance' filter='!(music), &(rom-twerk)' />.\" },\n                { label: \"ssa\", value: \"This is a happy sound <ssa cat='happy'/>\" },\n                { label: \"ssa\", value: \"Here are three happy sounds <ssa cat='happy' loop='3'/>\" },\n                { label: \"ssa\", value: \"<ssa cat='worried'/> That was my worried noise\" },\n                { label: \"ssa\", value: \"<ssa cat='affection' nonBlocking='true'/> I love penguins\" },\n                { label: \"tts\", value: \"Not sure <break size='0.5'/> if trust moose\" },\n                { label: \"tts\", value: \"I won’t talk for 2 seconds. <break size='2'/> See?\" },\n                { label: \"tts\", value: \"Does <phoneme ph='b aa n ou'> Bono </phoneme> love moose, too?\" },\n                { label: \"tts\", value: \"Does <phoneme ph='b aa1 n ou0'> Bono </phoneme> love moose, too?\" },\n                { label: \"tts\", value: \"<pitch add='200'> Hi </pitch> <pitch mult='1.2'> there </pitch> <break size='1'/> I'm Jibo\" },\n                { label: \"tts\", value: \"This is a <pitch mult='2.2'> pitch </pitch> test\" },\n                { label: \"tts\", value: \"This is a <duration stretch='3'> duration </duration> test\" },\n                { label: \"tts\", value: \"<duration stretch='3.0'> <pitch halftone='-5'> This is a duration and pitch test </pitch></duration>\" },\n                { label: \"tts\", value: \"<pitch band='1.2'> Hi there, I'm Jibo </pitch>\" },\n                { label: \"tts\", value: \"*Jibo is spelled <say-as spell='jibo'/>\" },\n        ];\n\n        this.emit('ready', this);\n    }\n\n    get appVerison(): string {\n        return appVersion;\n    }\n\n    updateAppStatusMessages(message: string, subsystem?: string, clearMessages: boolean = false): string {\n        subsystem = subsystem || '';\n        if (clearMessages) {\n            this.statusMessages = '';\n        }\n        this.statusMessages = `${subsystem}: ${this.statusMessages}\\n${message}`;\n        this.onUpdate();\n        return this.statusMessages;\n    }\n\n    onUpdate(): void {\n        this.emit('updateModel');\n    }\n\n    dispose(): void {\n    }\n}\n","// This file was generated on Wed, Aug 15, 2018  9:30:37 AM\nexport const appVersion = '0.1.0';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/bootstrap.min.css';\nimport './css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Model from './model/Model';\n\nconsole.log(`process.env: `, process.env);\nif (process.env.REACT_APP_MODE == 'electron') {\n    console.log(`Running in Electron: Filesystem access is enabled.`)\n}\n\nlet model: Model = new Model();\n\nReactDOM.render(<App model={model}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}